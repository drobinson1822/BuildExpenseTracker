name: Deploy to Development

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install backend dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
    
    - name: Run backend tests
      run: |
        cd backend
        pytest
    
    - name: Test health endpoints
      run: |
        cd backend
        python -c "
        import sys
        sys.path.append('.')
        from main import app
        from fastapi.testclient import TestClient
        client = TestClient(app)
        
        # Test health endpoint
        response = client.get('/healthz')
        assert response.status_code == 200
        assert 'status' in response.json()
        
        # Test version endpoint
        response = client.get('/version')
        assert response.status_code == 200
        assert 'version' in response.json()
        
        print('âœ… Health and version endpoints working')
        "

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --run
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        VITE_API_BASE: https://buildexpensetracker-api-dev.onrender.com/api/v1
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

  deploy-backend:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID_BACKEND_DEV }}
        api-key: ${{ secrets.RENDER_API_KEY }}

  deploy-frontend:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_DEV }}
        working-directory: ./frontend
        vercel-args: '--prod'
